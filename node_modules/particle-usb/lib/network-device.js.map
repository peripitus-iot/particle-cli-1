{"version":3,"sources":["../src/network-device.js"],"names":["DEFAULT_INTERFACE","NetworkStatus","proto","NetworkState","DOWN","UP","NetworkDevice","base","getNetworkStatus","sendRequest","Request","NETWORK_GET_STATUS","interface","then","rep","fromProtobuf","config","state","getNetworkConfig","NETWORK_GET_CONFIGURATION","setNetworkConfig","NETWORK_SET_CONFIGURATION"],"mappings":";;;;;;;;;;;;AAAA;;AACA;;AAEA;;AAEA,MAAMA,iBAAiB,GAAG,CAA1B;AAEA;;;;AAGO,MAAMC,aAAa,GAAG,oCAAiBC,kBAAMC,YAAvB,EAAqC;AACjEC,EAAAA,IAAI,EAAE,MAD2D;AAEjEC,EAAAA,EAAE,EAAE;AAF6D,CAArC,CAAtB;AAKP;;;AAGA;AACA;;;;AACO,MAAMC,aAAa,GAAGC,IAAI,IAAI,cAAcA,IAAd,CAAmB;AACvD;;;;;AAKAC,EAAAA,gBAAgB,GAAG;AAClB,WAAO,KAAKC,WAAL,CAAiBC,iBAAQC,kBAAzB,EAA6C;AACnDC,MAAAA,SAAS,EAAEZ;AADwC,KAA7C,EAEJa,IAFI,CAECC,GAAG,IAAIb,aAAa,CAACc,YAAd,CAA2BD,GAAG,CAACE,MAAJ,CAAWC,KAAtC,CAFR,CAAP;AAGA;AAED;;;;;;;AAKAC,EAAAA,gBAAgB,GAAG;AAClB,WAAO,KAAKT,WAAL,CAAiBC,iBAAQS,yBAAzB,EAAoD;AAAE;AAC5DP,MAAAA,SAAS,EAAEZ;AAD+C,KAApD,CAAP;AAGA;AAED;;;;;;;;AAMAoB,EAAAA,gBAAgB,CAACJ,MAAD,EAAS;AACxB,WAAO,KAAKP,WAAL,CAAiBC,iBAAQW,yBAAzB,EAAoDL,MAApD,CAAP,CADwB,CAC4C;AACpE;;AA/BsD,CAAjD","sourcesContent":["import { Request } from './request';\nimport { fromProtobufEnum } from './protobuf-util';\n\nimport proto from './protocol';\n\nconst DEFAULT_INTERFACE = 1;\n\n/**\n * Network status.\n */\nexport const NetworkStatus = fromProtobufEnum(proto.NetworkState, {\n\tDOWN: 'DOWN',\n\tUP: 'UP'\n});\n\n/**\n * Mixin class for a network device.\n */\n// TODO: Recent versions of Device OS use a different network configuration interface and the\n// methods of this class no longer work\nexport const NetworkDevice = base => class extends base {\n\t/**\n\t * Get network status.\n\t *\n\t * @return {Promise<String>}\n\t */\n\tgetNetworkStatus() {\n\t\treturn this.sendRequest(Request.NETWORK_GET_STATUS, {\n\t\t\tinterface: DEFAULT_INTERFACE\n\t\t}).then(rep => NetworkStatus.fromProtobuf(rep.config.state));\n\t}\n\n\t/**\n\t * Get network configuration.\n\t *\n\t * @return {Promise<Object>}\n\t */\n\tgetNetworkConfig() {\n\t\treturn this.sendRequest(Request.NETWORK_GET_CONFIGURATION, { // TODO\n\t\t\tinterface: DEFAULT_INTERFACE\n\t\t});\n\t}\n\n\t/**\n\t * Set network configuration.\n\t *\n\t * @param {Object} config Network configuration.\n\t * @return {Promise}\n\t */\n\tsetNetworkConfig(config) {\n\t\treturn this.sendRequest(Request.NETWORK_SET_CONFIGURATION, config); // TODO\n\t}\n};\n"],"file":"network-device.js"}