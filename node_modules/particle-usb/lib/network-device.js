"use strict";

var _interopRequireDefault = require("@babel/runtime-corejs2/helpers/interopRequireDefault");

var _Object$defineProperty = require("@babel/runtime-corejs2/core-js/object/define-property");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.NetworkDevice = exports.NetworkStatus = void 0;

var _request = require("./request");

var _protobufUtil = require("./protobuf-util");

var _protocol = _interopRequireDefault(require("./protocol"));

const DEFAULT_INTERFACE = 1;
/**
 * Network status.
 */

const NetworkStatus = (0, _protobufUtil.fromProtobufEnum)(_protocol.default.NetworkState, {
  DOWN: 'DOWN',
  UP: 'UP'
});
/**
 * Mixin class for a network device.
 */
// TODO: Recent versions of Device OS use a different network configuration interface and the
// methods of this class no longer work

exports.NetworkStatus = NetworkStatus;

const NetworkDevice = base => class extends base {
  /**
   * Get network status.
   *
   * @return {Promise<String>}
   */
  getNetworkStatus() {
    return this.sendRequest(_request.Request.NETWORK_GET_STATUS, {
      interface: DEFAULT_INTERFACE
    }).then(rep => NetworkStatus.fromProtobuf(rep.config.state));
  }
  /**
   * Get network configuration.
   *
   * @return {Promise<Object>}
   */


  getNetworkConfig() {
    return this.sendRequest(_request.Request.NETWORK_GET_CONFIGURATION, {
      // TODO
      interface: DEFAULT_INTERFACE
    });
  }
  /**
   * Set network configuration.
   *
   * @param {Object} config Network configuration.
   * @return {Promise}
   */


  setNetworkConfig(config) {
    return this.sendRequest(_request.Request.NETWORK_SET_CONFIGURATION, config); // TODO
  }

};

exports.NetworkDevice = NetworkDevice;
//# sourceMappingURL=network-device.js.map