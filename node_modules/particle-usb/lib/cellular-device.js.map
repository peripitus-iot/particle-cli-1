{"version":3,"sources":["../src/cellular-device.js"],"names":["CellularDevice","base","getIccid","timeout","globalOptions","requestTimeout","r","sendRequest","Request","CELLULAR_GET_ICCID","iccid","isCellularDevice"],"mappings":";;;;;;;;;;AAAA;;AACA;;AAEA;;;AAGO,MAAMA,cAAc,GAAGC,IAAI,IAAI,cAAcA,IAAd,CAAmB;AACxD;;;;;AAKA,QAAMC,QAAN,CAAe;AAAEC,IAAAA,OAAO,GAAGC,sBAAcC;AAA1B,MAA6C,EAA5D,EAAgE;AAC/D,UAAMC,CAAC,GAAG,MAAM,KAAKC,WAAL,CAAiBC,iBAAQC,kBAAzB,EAA6C;AAAK;AAAlD,MAA6D;AAAEN,MAAAA;AAAF,KAA7D,CAAhB;AACA,WAAOG,CAAC,CAACI,KAAT;AACA;AAED;;;;;AAGA,MAAIC,gBAAJ,GAAuB;AACtB,WAAO,IAAP;AACA;;AAhBuD,CAAlD","sourcesContent":["import { Request } from './request';\nimport { globalOptions } from './config';\n\n/**\n * Mixin class for a cellular network device.\n */\nexport const CellularDevice = base => class extends base {\n\t/**\n\t * Get ICCID of the active SIM card.\n\t *\n\t * @return {Promise<String>}\n\t */\n\tasync getIccid({ timeout = globalOptions.requestTimeout } = {}) {\n\t\tconst r = await this.sendRequest(Request.CELLULAR_GET_ICCID, null /* msg */, { timeout });\n\t\treturn r.iccid;\n\t}\n\n\t/**\n\t * Set to `true` if this is a cellular device.\n\t */\n\tget isCellularDevice() {\n\t\treturn true;\n\t}\n};\n"],"file":"cellular-device.js"}