{"version":3,"sources":["../src/wifi-device.js"],"names":["WifiAntenna","proto","WiFiAntenna","INTERNAL","EXTERNAL","AUTO","WifiSecurity","WiFiSecurityType","NONE","WEP","WPA","WPA2","WPA_ENTERPRISE","WPA2_ENTERPRISE","UNKNOWN","WifiCipher","WiFiSecurityCipher","AES","TKIP","AES_TKIP","EapMethod","EapType","TLS","PEAP","bssidFromProtobuf","bssid","map","b","toString","padStart","join","bssidToProtobuf","Buffer","from","replace","accessPointCommonProperties","accessPointFromProtobuf","WiFiAccessPoint","security","fromProtobuf","cipher","eapType","name","value","accessPointToProtobuf","toProtobuf","eapMethod","WifiDevice","base","setWifiAntenna","antenna","sendRequest","Request","WIFI_SET_ANTENNA","getWifiAntenna","WIFI_GET_ANTENNA","then","rep","scanWifiNetworks","WIFI_SCAN","list","aps","ap","setWifiCredentials","credentials","WIFI_SET_CREDENTIALS","getWifiCredentials","WIFI_GET_CREDENTIALS","clearWifiCredentials","WIFI_CLEAR_CREDENTIALS"],"mappings":"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","sourcesContent":["import { Request } from './request';\nimport { fromProtobufEnum, fromProtobufMessage, toProtobufMessage } from './protobuf-util';\n\nimport proto from './protocol';\n\n/**\n * WiFi antenna types.\n */\nexport const WifiAntenna = fromProtobufEnum(proto.WiFiAntenna, {\n\tINTERNAL: 'INTERNAL',\n\tEXTERNAL: 'EXTERNAL',\n\tAUTO: 'AUTO'\n});\n\n/**\n * WiFi security types.\n */\nexport const WifiSecurity = fromProtobufEnum(proto.WiFiSecurityType, {\n\tNONE: 'UNSEC',\n\tWEP: 'WEP',\n\tWPA: 'WPA',\n\tWPA2: 'WPA2',\n\tWPA_ENTERPRISE: 'WPA_ENTERPRISE',\n\tWPA2_ENTERPRISE: 'WPA2_ENTERPRISE',\n\tUNKNOWN: 'UNKNOWN'\n});\n\n/**\n * WiFi cipher types.\n */\nexport const WifiCipher = fromProtobufEnum(proto.WiFiSecurityCipher, {\n\tAES: 'AES',\n\tTKIP: 'TKIP',\n\tAES_TKIP: 'AES_TKIP'\n});\n\n/**\n * EAP methods.\n */\nexport const EapMethod = fromProtobufEnum(proto.EapType, {\n\tTLS: 'TLS',\n\tPEAP: 'PEAP'\n});\n\nfunction bssidFromProtobuf(bssid) {\n\treturn [...bssid].map(b => b.toString(16).padStart(2, '0')).join(':');\n}\n\nfunction bssidToProtobuf(bssid) {\n\treturn Buffer.from(bssid.replace(/:/g, ''), 'hex');\n}\n\nconst accessPointCommonProperties = ['ssid', 'channel', 'maxDataRate', 'rssi', 'password', 'innerIdentity',\n\t'outerIdentity', 'privateKey', 'clientCertificate', 'caCertificate'];\n\nconst accessPointFromProtobuf = fromProtobufMessage(proto.WiFiAccessPoint, accessPointCommonProperties, {\n\tbssid: bssidFromProtobuf,\n\tsecurity: WifiSecurity.fromProtobuf,\n\tcipher: WifiCipher.fromProtobuf,\n\teapType: {\n\t\tname: 'eapMethod',\n\t\tvalue: EapMethod.fromProtobuf\n\t}\n});\n\nconst accessPointToProtobuf = toProtobufMessage(proto.WiFiAccessPoint, accessPointCommonProperties, {\n\tbssid: bssidToProtobuf,\n\tsecurity: WifiSecurity.toProtobuf,\n\tcipher: WifiCipher.toProtobuf,\n\teapMethod: {\n\t\tname: 'eapType',\n\t\tvalue: EapMethod.toProtobuf\n\t}\n});\n\n/**\n * Mixin class for a WiFi device.\n */\n// TODO: Recent versions of Device OS use a different network configuration interface and the\n// methods of this class no longer work\nexport const WifiDevice = base => class extends base {\n\t/**\n\t * Set the WiFi antenna to use.\n\t *\n\t * @param {String} antenna Antenna type.\n\t * @return {Promise}\n\t */\n\tsetWifiAntenna(antenna) {\n\t\treturn this.sendRequest(Request.WIFI_SET_ANTENNA, {\n\t\t\tantenna: WifiAntenna.toProtobuf(antenna)\n\t\t});\n\t}\n\n\t/**\n\t * Get the currently used WiFi antenna.\n\t *\n\t * @return {Promise<String>}\n\t */\n\tgetWifiAntenna(/* antenna */) {\n\t\treturn this.sendRequest(Request.WIFI_GET_ANTENNA).then(rep => {\n\t\t\treturn WifiAntenna.fromProtobuf(rep.antenna);\n\t\t});\n\t}\n\n\t/**\n\t * Perform the WiFi scan.\n\t *\n\t * @return {Promise<Array>}\n\t */\n\tscanWifiNetworks() {\n\t\treturn this.sendRequest(Request.WIFI_SCAN).then(rep => {\n\t\t\tif (!rep.list) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\treturn rep.list.aps.map(ap => accessPointFromProtobuf(ap));\n\t\t});\n\t}\n\n\t/**\n\t * Set the WiFi credentials.\n\t *\n\t * @param {Object} credentials Credentials.\n\t * @return {Promise}\n\t */\n\tsetWifiCredentials(credentials) {\n\t\treturn this.sendRequest(Request.WIFI_SET_CREDENTIALS, {\n\t\t\tap: accessPointToProtobuf(credentials)\n\t\t});\n\t}\n\n\t/**\n\t * Get the WiFi credentials.\n\t *\n\t * @return {Promise<Array>}\n\t */\n\tgetWifiCredentials() {\n\t\treturn this.sendRequest(Request.WIFI_GET_CREDENTIALS).then(rep => {\n\t\t\tif (!rep.list) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\treturn rep.list.aps.map(ap => accessPointFromProtobuf(ap));\n\t\t});\n\t}\n\n\t/**\n\t * Clear the WiFi credentials.\n\t *\n\t * @return {Promise}\n\t */\n\tclearWifiCredentials() {\n\t\treturn this.sendRequest(Request.WIFI_CLEAR_CREDENTIALS);\n\t}\n};\n"],"file":"wifi-device.js"}