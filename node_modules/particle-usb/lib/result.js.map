{"version":3,"sources":["../src/result.js"],"names":["RESULT_CODES","id","value","message","RESULT_CODE_MESSAGES","reduce","obj","result","Result","messageForResultCode"],"mappings":"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","sourcesContent":["// Result codes as defined by the firmware's system_error_t enum\nconst RESULT_CODES = [\n\t{\n\t\tid: 'OK',\n\t\tvalue: 0,\n\t\tmessage: 'Operation succeeded'\n\t},\n\t{\n\t\tid: 'ERROR',\n\t\tvalue: -100,\n\t\tmessage: 'Unknown error'\n\t},\n\t{\n\t\tid: 'BUSY',\n\t\tvalue: -110,\n\t\tmessage: 'Resource is busy'\n\t},\n\t{\n\t\tid: 'NOT_SUPPORTED',\n\t\tvalue: -120,\n\t\tmessage: 'Not supported'\n\t},\n\t{\n\t\tid: 'NOT_ALLOWED',\n\t\tvalue: -130,\n\t\tmessage: 'Not allowed'\n\t},\n\t{\n\t\tid: 'CANCELLED',\n\t\tvalue: -140,\n\t\tmessage: 'Operation cancelled'\n\t},\n\t{\n\t\tid: 'ABORTED',\n\t\tvalue: -150,\n\t\tmessage: 'Operation aborted'\n\t},\n\t{\n\t\tid: 'TIMEOUT_ERROR',\n\t\tvalue: -160,\n\t\tmessage: 'Timeout error'\n\t},\n\t{\n\t\tid: 'NOT_FOUND',\n\t\tvalue: -170,\n\t\tmessage: 'Not found'\n\t},\n\t{\n\t\tid: 'ALREADY_EXISTS',\n\t\tvalue: -180,\n\t\tmessage: 'Already exists'\n\t},\n\t{\n\t\tid: 'TOO_LARGE',\n\t\tvalue: -190,\n\t\tmessage: 'Data is too large'\n\t},\n\t{\n\t\tid: 'LIMIT_EXCEEDED',\n\t\tvalue: -200,\n\t\tmessage: 'Limit exceeded'\n\t},\n\t{\n\t\tid: 'INVALID_STATE',\n\t\tvalue: -210,\n\t\tmessage: 'Invalid state'\n\t},\n\t{\n\t\tid: 'IO_ERROR',\n\t\tvalue: -220,\n\t\tmessage: 'IO error'\n\t},\n\t{\n\t\tid: 'NETWORK_ERROR',\n\t\tvalue: -230,\n\t\tmessage: 'Network error'\n\t},\n\t{\n\t\tid: 'PROTOCOL_ERROR',\n\t\tvalue: -240,\n\t\tmessage: 'Protocol error'\n\t},\n\t{\n\t\tid: 'INTERNAL_ERROR',\n\t\tvalue: -250,\n\t\tmessage: 'Internal error'\n\t},\n\t{\n\t\tid: 'NO_MEMORY',\n\t\tvalue: -260,\n\t\tmessage: 'Memory allocation error'\n\t},\n\t{\n\t\tid: 'INVALID_ARGUMENT',\n\t\tvalue: -270,\n\t\tmessage: 'Invalid argument'\n\t},\n\t{\n\t\tid: 'BAD_DATA',\n\t\tvalue: -280,\n\t\tmessage: 'Invalid data format'\n\t},\n\t{\n\t\tid: 'OUT_OF_RANGE',\n\t\tvalue: -290,\n\t\tmessage: 'Out of range'\n\t}\n];\n\n// Result code messages\nconst RESULT_CODE_MESSAGES = RESULT_CODES.reduce((obj, result) => {\n\tobj[result.value] = result.message;\n\treturn obj;\n}, {});\n\n/**\n * Request result codes.\n */\nexport const Result = RESULT_CODES.reduce((obj, result) => {\n\tobj[result.id] = result.value;\n\treturn obj;\n}, {});\n\n/**\n * Return a message for the result code.\n */\nexport function messageForResultCode(result) {\n\treturn (RESULT_CODE_MESSAGES[result] || 'Request error');\n}\n"],"file":"result.js"}